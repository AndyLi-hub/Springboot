<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nkuvr.dao.UserMapper">

    <!-- 用户注册 -->
    <insert id="register">
        insert into sys_user (student_number, real_name, password, state, remark)
        values (#{studentNumber}, #{realName}, #{password}, #{state}, #{remark})
    </insert>

    <!-- 管理员对用户进行编辑 -->
    <update id="userEdit" parameterType="com.nkuvr.pojo.User">
        update sys_user
        <trim prefix="set" suffixOverrides=",">
            <if test="password != null">password = #{password},</if>
            <if test="studentNumber != null">student_number = #{studentNumber},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="state != null">state = #{state},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = NOW()
        </trim>
        where id = #{id}
    </update>

    <!-- 管理员对用户进行新增 -->
    <insert id="userAdd">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="password != null">password,</if>
            <if test="studentNumber != null">student_number,</if>
            <if test="realName != null">real_name,</if>
            <if test="gender != null">gender,</if>
            <if test="state != null">state,</if>
            <if test="remark != null">remark,</if>
            create_time,
            update_time
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            <if test="password != null">#{password},</if>
            <if test="studentNumber != null">#{studentNumber},</if>
            <if test="realName != null">#{realName},</if>
            <if test="gender != null">#{gender},</if>
            <if test="state != null">#{state},</if>
            <if test="remark != null">#{remark},</if>
            NOW(),
            NOW()
        </trim>
    </insert>
<!--    <insert id="userAdd" parameterType="list">-->
<!--        insert into sys_user-->
<!--        (password, student_number, real_name, gender, state, remark, create_time, update_time)-->
<!--        values-->
<!--        <foreach collection="list" item="user" separator=",">-->
<!--            (-->
<!--            #{user.password},-->
<!--            #{user.studentNumber},-->
<!--            #{user.realName},-->
<!--            #{user.gender},-->
<!--            #{user.state},-->
<!--            #{user.remark},-->
<!--            NOW(),-->
<!--            NOW()-->
<!--            )-->
<!--        </foreach>-->
<!--    </insert>-->


    <!-- 用户个人信息修改 -->
    <update id="profileEdit" parameterType="com.nkuvr.pojo.User">
        update sys_user
        <trim prefix="set" suffixOverrides=",">
            <if test="realName != null">real_name = #{realName},</if>
            <if test="gender != null">gender = #{gender},</if>
        </trim>
        where id = #{id}
    </update>

    <!-- 用户密码修改 -->
    <update id="changePassword" parameterType="com.nkuvr.pojo.User">
        update sys_user set password = #{password}
        where id = #{id}
    </update>

    <!-- 根据 id 删除用户 -->
    <delete id="deleteUserById">
        delete from sys_user where id = #{id}
    </delete>

    <delete id="piLiangDelete">
        delete from sys_user where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <!-- 用户登录 -->
    <select id="login" resultType="com.nkuvr.pojo.User">
        select * from sys_user where student_number = #{studentNumber} and password = #{password}
    </select>

    <!-- 查询所有用户 -->
    <select id="findAll" resultType="com.nkuvr.pojo.User">
        select * from sys_user
    </select>

    <!-- 根据 id 查询用户 -->
    <select id="findUserById" resultType="com.nkuvr.pojo.User">
        select * from sys_user where id = #{id}
    </select>

    <!-- 根据学号查询用户 -->
    <select id="findUserByStudentNumber" parameterType="com.nkuvr.pojo.User" resultType="com.nkuvr.pojo.User">
        select * from sys_user where student_number = #{studentNumber}
    </select>

    <select id="findUsersByStudentNumber" resultType="com.nkuvr.pojo.User">
select * from sys_user where student_number = #{studentNumber}
    </select>

    <select id="findUsersByRealName" resultType="com.nkuvr.pojo.User">
        SELECT * FROM sys_user WHERE real_name LIKE CONCAT('%', #{realName}, '%')
    </select>

</mapper>